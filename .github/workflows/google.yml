name: Push samples to testing GKE deployment 

on:
  push:
    paths-ignore: 
      - 'docs/**' 
      - '*.md'
    branches:
    - master

# Environment variables available to all jobs and steps in this workflow
env:
  GKE_PROJECT: ${{ secrets.GKE_PROJECT }}
  GKE_ZONE: us-east1-c
  GKE_CLUSTER: github-ci

jobs:
  deploy-to-gke:
    name: Deploy kCTF to GKE
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Download kubectl
      run: |
        curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl
        chmod +x ./kubectl
        sudo mv ./kubectl /usr/local/bin/kubectl

    - name: Setup gcloud CLI
      uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '270.0.0'
        service_account_email: ${{ secrets.GKE_EMAIL }}
        service_account_key: ${{ secrets.GKE_KEY }}

    - name: Configure docker to use the gcloud command-line tool as a credential helper
      run: |
        gcloud auth configure-docker

    - name: Build base images locally if any cached files changed
      run: |
        FILES=$(git diff-tree --no-commit-id --name-only -r ${{ github.sha }} | grep ^config/docker/)
        if [ ! -z "$FILES" ]; then
          pushd config/docker
          docker build . --file nsjail.Dockerfile -t nsjail
          docker build . --file chroot.Dockerfile -t chroot
          docker build . --file pwntools.Dockerfile -t pwntools
          popd
          scripts/dev/docker.sh nsjail gcr.io/kctf-nsjail/kctf-nsjail-bin latest
          scripts/dev/docker.sh chroot gcr.io/kctf-nsjail/kctf-nsjail-chroot latest
          scripts/dev/docker.sh pwntools gcr.io/kctf-nsjail/kctf-pwntools latest
        fi
        
    
    - name: Configure kCTF directory
      run: |        
        export PATH=$PATH:$PWD/bin
        kctf-setup-chal-dir $PWD/samples
        kctf-chal-create default-task

    - name: Configure kCTF cluster
      run: |
        export PATH=$PATH:$PWD/bin
        echo PROJECT=$GKE_PROJECT > /tmp/kctf.conf
        echo ZONE=$GKE_ZONE >> /tmp/kctf.conf
        echo CLUSTER_NAME=$GKE_CLUSTER >> /tmp/kctf.conf
        echo DOMAIN_NAME=$GKE_CLUSTER.kctf.dev >> /tmp/kctf.conf
        # hack until https://github.com/google/kctf/issues/19 is fixed
        KCTF_DIRECTORY=${GKE_PROJECT}_${GKE_ZONE}_${GKE_CLUSTER}
        mkdir -p samples/kctf-conf/$KCTF_DIRECTORY/
        mv /tmp/kctf.conf samples/kctf-conf/$KCTF_DIRECTORY/cluster.conf
        kctf-config-load samples/kctf-conf/$KCTF_DIRECTORY/cluster.conf

    - name: Expose sample tasks
      run: |
        echo PUBLIC=true | tee -a $(ls samples/*/chal.conf)
        echo HEALTHCHECK=true | tee -a $(ls samples/*/chal.conf)

    - name: Deploy all tasks
      run: |
        export PATH=$PATH:$PWD/bin
        kctf-batch-deploy
